# services:
#   mongodb:
#     # image: mongo:4.2.2  # Vulnerable version
#     image: mongo:7.0  # Vulnerable version
#     container_name: mongodb-vulnerable
#     ports:
#       - 27017:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: password
#     networks:
#       - mongo-network
#     volumes:
#       - mongo_data:/data/db
#       - ./mongo.conf:/etc/mongod.conf 
#     command: ["mongod", "--config", "/etc/mongod.conf"]

#   # Test client container to try connecting to MongoDB
#   test-client:
#     image: mongo:7.0  # MongoDB client image
#     container_name: mongo-test-client
#     depends_on:
#       - mongodb
#     networks:
#       - mongo-network
#     entrypoint: >
#       bash -c "
#         echo 'Testing MongoDB connection';
#         sleep 10;
#         mongo --host mongodb-vulnerable --port 27017 -u root -p password --eval 'db.runCommand({ connectionStatus: 1 })';
#         echo 'Connection test complete. Keeping the container running...';
#         tail -f /dev/null
#       "

# networks:
#   mongo-network:
#     driver: bridge

# volumes:
#   mongo_data:
#     driver: local


services:
  mongodb:
    image: mongo:7.0
    # image: mongo:4.2.2
    # image: mongo:3.6.17
    container_name: vulnerable-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    ports:
      - "27017:27017"
    command: mongod --auth --bind_ip_all
    # command: mongod --auth --bind_ip 127.0.0.1
    networks:
      - mongo-network
    # Add healthcheck to ensure MongoDB is ready
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

networks:
  mongo-network:
    driver: bridge